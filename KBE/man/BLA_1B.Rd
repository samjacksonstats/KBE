% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/BLA_1B.r
\name{BLA_1B}
\alias{BLA_1B}
\title{Bayes Linear Adjustment by a Single Known Boundary}
\usage{
BLA_1B(x, K_d, xK = NA, xK_d = NA, fxK, E_fx = 0, E_fxK = 0, theta, s2)
}
\arguments{
\item{x}{points at which we want to update}

\item{K_d}{the dimensions which, when fixed at certain values, result in known boundaries.}

\item{xK}{the projection of x onto known boundary K}

\item{xK_d}{values the dimensions K must take for the function to be known}

\item{fxK}{function evaluated at x projected onto the boundary K.}

\item{E_fx}{prior expectation for the function f(x)}

\item{E_fxK}{prior expectation for f(x^K)}

\item{theta}{vector of correlation length parameter values}

\item{s2}{scalar variance parameter value.}
}
\value{
\item{EB_fx}{Expected value of f(x) adjusted by knowledge of function behaviour along K.}
\item{VarB_fx}{Variance of f(x) adjusted by knowledge of function behaviour along K.}
\item{CovB_fx}{Covariance of f(x) adjusted by knowledge of function behaviour along K.}
}
\description{
Perform a Bayes linear adjustment utilising knowledge of function behaviour along
a single boundary in the input space.
}
\examples{
# Toy function
f <- function( x ){

sin( x[1] / ( exp( x[2] ) ) ) + cos( x[3] )

}
x <- matrix( runif( 12 ), ncol = 3 )
K_d = 2
xK_d = 0
fxK <- f_boundary( x = x, K_d = K_d, xK_d = xK_d, f = f )
theta <- c( pi, pi/8, pi )
s2 <- 2
BA <- BLA_1B( x = x, K_d = K_d, xK_d = xK_d, fxK = fxK, theta = theta, s2 = s2 )
}
